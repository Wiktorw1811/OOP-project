/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project1;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.ArrayList;

/**
 *
 * @author x17444592
 */
public class SurveyGUI extends javax.swing.JFrame {
    Survey e;
    //Declare an arraylist of type survey
    private ArrayList<Detached> array=new ArrayList();
    private ArrayList<SemiDetached> array1=new ArrayList();
    private ArrayList<Terraced> array2=new ArrayList();
    private ArrayList<Apartment> array3=new ArrayList();
    //
    String input;
 String factors;
    /**
     * Creates new form SurveyGUI
     */
    public SurveyGUI() {
       //load in the arraylist
        initComponents();
       
        
        if(visitCb.getSelectedItem().equals("No")){conditionLbl.setVisible(false);}
        if(visitCb.getSelectedItem().equals("Yes")){conditionLbl.setVisible(true);}
        if(visitCb.getSelectedItem().equals("No")){conditionSl.setVisible(false);}
        if(visitCb.getSelectedItem().equals("Yes")){conditionSl.setVisible(true);}
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLbl = new javax.swing.JLabel();
        nameTf = new javax.swing.JTextField();
        typeLbl = new javax.swing.JLabel();
        typeCb = new javax.swing.JComboBox<>();
        payLbl = new javax.swing.JLabel();
        payTf = new javax.swing.JTextField();
        locationLbl = new javax.swing.JLabel();
        locationCb = new javax.swing.JComboBox<>();
        crimeLbl = new javax.swing.JLabel();
        bedroomsLbl = new javax.swing.JLabel();
        bedroomsCb = new javax.swing.JComboBox<>();
        factorsLbl = new javax.swing.JLabel();
        visitLbl = new javax.swing.JLabel();
        visitCb = new javax.swing.JComboBox<>();
        conditionLbl = new javax.swing.JLabel();
        detachedLbl = new javax.swing.JLabel();
        detachedCb = new javax.swing.JComboBox<>();
        detadvLbl = new javax.swing.JLabel();
        detadvCb = new javax.swing.JComboBox<>();
        semgardenLbl = new javax.swing.JLabel();
        semgardenCb = new javax.swing.JComboBox<>();
        semLbl = new javax.swing.JLabel();
        semCb = new javax.swing.JComboBox<>();
        terragardenLbl = new javax.swing.JLabel();
        terragardenCb = new javax.swing.JComboBox<>();
        terraneiLbl = new javax.swing.JLabel();
        terraneiCb = new javax.swing.JComboBox<>();
        apartLbl = new javax.swing.JLabel();
        apartCb = new javax.swing.JComboBox<>();
        balLbl = new javax.swing.JLabel();
        balCb = new javax.swing.JComboBox<>();
        submitBtn = new javax.swing.JButton();
        factorsTf = new javax.swing.JTextField();
        crimeCb = new javax.swing.JComboBox<>();
        conditionSl = new javax.swing.JComboBox<>();
        Backbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nameLbl.setText("Name: ");

        nameTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTfActionPerformed(evt);
            }
        });

        typeLbl.setText("What type of house do you live in ?");

        typeCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose one", "Detached", "Semi-detached", "Terraced", "Apartment" }));
        typeCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeCbActionPerformed(evt);
            }
        });

        payLbl.setText("How much do you pay for your current house ?");

        payTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payTfActionPerformed(evt);
            }
        });

        locationLbl.setText("Which of these locations of Dublin do you find most desirable to live in ?");

        locationCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "North", "South", "Central" }));
        locationCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationCbActionPerformed(evt);
            }
        });

        crimeLbl.setText("How would you rate the level of crime in your current area ? (1 being no crime 5 being lots of crime)");

        bedroomsLbl.setText("How many bedrooms in your current house ?");

        bedroomsCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6 or more" }));
        bedroomsCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedroomsCbActionPerformed(evt);
            }
        });

        factorsLbl.setText("Write most important factor when choosing a house");

        visitLbl.setText("Have you gone to any open houses recently");

        visitCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No", "Yes" }));
        visitCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitCbActionPerformed(evt);
            }
        });

        conditionLbl.setText("How would you rate the condition of the open house ? (1 being very bad and 5 being great)");

        detachedLbl.setText("If your new house was also detached would you expect to ever add an extension to it ?");

        detachedCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "never", "I dont know", "maybe", "probably yes" }));
        detachedCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detachedCbActionPerformed(evt);
            }
        });

        detadvLbl.setText("What is the number 1 advantage of living in a detached house ?");

        detadvCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "privacy", "space", "independance" }));

        semgardenLbl.setText("If your new house was also semi-detached would you be looking for one with a garden bigger than your current home ? ");

        semgardenCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "no garden size is unimportant", "yes I require a big garden" }));

        semLbl.setText("Have you had a good experience with the people living in the house which was attached to yours ?");

        semCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "yes it was great", "no we did not get along" }));

        terragardenLbl.setText("As terraced houses tend to have small gardens how big is your garden ?");

        terragardenCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "no garden", "very small garden", "normal size", "big" }));

        terraneiLbl.setText("How well did you get along with the neighbours in your area?");

        terraneiCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "great", "it was ok", "one of them were ok", "very bad" }));

        apartLbl.setText("Does your current apartment have a balcony ?");

        apartCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "no", "yes" }));

        balLbl.setText("If you were to live in another apartment would it need to have a balcony ?");

        balCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "no", "possibly", "yes it must have a balcony" }));

        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        factorsTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                factorsTfActionPerformed(evt);
            }
        });

        crimeCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        crimeCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crimeCbActionPerformed(evt);
            }
        });

        conditionSl.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        Backbtn.setText("Back");
        Backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(conditionLbl)
                        .addGap(18, 18, 18)
                        .addComponent(conditionSl, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(crimeLbl)
                        .addGap(18, 18, 18)
                        .addComponent(crimeCb, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(detachedLbl)
                            .addComponent(detadvLbl))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(detadvCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(detachedCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(semgardenCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(semgardenLbl)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bedroomsLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bedroomsCb, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(typeLbl)
                            .addComponent(payLbl)
                            .addComponent(locationLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(typeCb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(payTf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(locationCb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(factorsLbl)
                        .addGap(18, 18, 18)
                        .addComponent(factorsTf))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(visitLbl)
                                .addGap(18, 18, 18)
                                .addComponent(visitCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(semLbl)
                                    .addComponent(terragardenLbl)
                                    .addComponent(terraneiLbl)
                                    .addComponent(apartLbl)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(submitBtn)
                                        .addComponent(balLbl)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(terraneiCb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(semCb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(terragardenCb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(apartCb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(balCb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(nameLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Backbtn)
                .addGap(54, 54, 54))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLbl)
                    .addComponent(nameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Backbtn))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(typeLbl)
                    .addComponent(typeCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(payLbl)
                    .addComponent(payTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(locationLbl)
                    .addComponent(locationCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crimeLbl)
                    .addComponent(crimeCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bedroomsCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bedroomsLbl))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(factorsLbl)
                    .addComponent(factorsTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(visitLbl)
                    .addComponent(visitCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(conditionLbl)
                    .addComponent(conditionSl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(detachedLbl)
                    .addComponent(detachedCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(detadvLbl)
                    .addComponent(detadvCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(semgardenLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(semgardenCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(semLbl)
                    .addComponent(semCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(terragardenLbl)
                    .addComponent(terragardenCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(terraneiLbl)
                    .addComponent(terraneiCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apartLbl)
                    .addComponent(apartCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(balLbl)
                    .addComponent(balCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(submitBtn)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void typeCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeCbActionPerformed
        // TODO add your handling code here:
        if(typeCb.getSelectedItem().equals("Detached")){
       e=new Detached();
        nameLbl.setVisible(true);
        nameTf.setVisible(true);
        typeLbl.setVisible(true);
        typeCb.setVisible(true);
        payLbl.setVisible(true);
        payTf.setVisible(true);
        locationLbl.setVisible(true);
        locationCb.setVisible(true);
        crimeLbl.setVisible(true);
        crimeCb.setVisible(true);
        conditionSl.setVisible(true);
        bedroomsLbl.setVisible(true);
        bedroomsCb.setVisible(true);
        factorsLbl.setVisible(true);
        factorsTf.setVisible(true);
        visitLbl.setVisible(true);
        visitCb.setVisible(true);
        conditionLbl.setVisible(true);
        conditionSl.setVisible(true);
        detachedLbl.setVisible(true);
        detachedCb.setVisible(true);
        detadvLbl.setVisible(true);
        detadvCb.setVisible(true);
        semgardenLbl.setVisible(false);
        semgardenCb.setVisible(false);
        semLbl.setVisible(false);
        semCb.setVisible(false);
        terragardenLbl.setVisible(false);
        terragardenCb.setVisible(false);
        terraneiLbl.setVisible(false);
        terraneiCb.setVisible(false);
        apartLbl.setVisible(false);
        apartCb.setVisible(false);
        balLbl.setVisible(false);
        balCb.setVisible(false);
        }   
       
        else if(typeCb.getSelectedItem().equals("Semi-detached")){
        e=new SemiDetached();
        nameLbl.setVisible(true);
        nameTf.setVisible(true);
        typeLbl.setVisible(true);
        typeCb.setVisible(true);
        payLbl.setVisible(true);
        payTf.setVisible(true);
        locationLbl.setVisible(true);
        locationCb.setVisible(true);
        crimeLbl.setVisible(true);
        crimeCb.setVisible(true);
        conditionSl.setVisible(true);
        bedroomsLbl.setVisible(true);
        bedroomsCb.setVisible(true);
        factorsLbl.setVisible(true);
        factorsTf.setVisible(true);
        visitLbl.setVisible(true);
        visitCb.setVisible(true);
        conditionLbl.setVisible(true);
        conditionSl.setVisible(true);
        detachedLbl.setVisible(false);
        detachedCb.setVisible(false);
        detadvLbl.setVisible(false);
        detadvCb.setVisible(false);
        semgardenLbl.setVisible(true);
        semgardenCb.setVisible(true);
        semLbl.setVisible(true);
        semCb.setVisible(true);
        terragardenLbl.setVisible(false);
        terragardenCb.setVisible(false);
        terraneiLbl.setVisible(false);
        terraneiCb.setVisible(false);
        apartLbl.setVisible(false);
        apartCb.setVisible(false);
        balLbl.setVisible(false);
        balCb.setVisible(false);

        
        }
        else if(typeCb.getSelectedItem().equals("Terraced")){
        e=new Terraced();
        nameLbl.setVisible(true);
        nameTf.setVisible(true);
        typeLbl.setVisible(true);
        typeCb.setVisible(true);
        payLbl.setVisible(true);
        payTf.setVisible(true);
        locationLbl.setVisible(true);
        locationCb.setVisible(true);
        crimeLbl.setVisible(true);
        crimeCb.setVisible(true);
        conditionSl.setVisible(true);
        bedroomsLbl.setVisible(true);
        bedroomsCb.setVisible(true);
        factorsLbl.setVisible(true);
        factorsTf.setVisible(true);
        visitLbl.setVisible(true);
        visitCb.setVisible(true);
        conditionLbl.setVisible(true);
        conditionSl.setVisible(true);
        detachedLbl.setVisible(false);
        detachedCb.setVisible(false);
        detadvLbl.setVisible(false);
        detadvCb.setVisible(false);
        semgardenLbl.setVisible(false);
        semgardenCb.setVisible(false);
        semLbl.setVisible(false);
        semCb.setVisible(false);
        terragardenLbl.setVisible(true);
        terragardenCb.setVisible(true);
        terraneiLbl.setVisible(true);
        terraneiCb.setVisible(true);
        apartLbl.setVisible(false);
        apartCb.setVisible(false);
        balLbl.setVisible(false);
        balCb.setVisible(false);

        
        }
        else if(typeCb.getSelectedItem().equals("Apartment")){
        e=new Apartment();
        nameLbl.setVisible(true);
        nameTf.setVisible(true);
        typeLbl.setVisible(true);
        typeCb.setVisible(true);
        payLbl.setVisible(true);
        payTf.setVisible(true);
        locationLbl.setVisible(true);
        locationCb.setVisible(true);
        crimeLbl.setVisible(true);
        crimeCb.setVisible(true);
        conditionSl.setVisible(true);
        bedroomsLbl.setVisible(true);
        bedroomsCb.setVisible(true);
        factorsLbl.setVisible(true);
        factorsTf.setVisible(true);
        visitLbl.setVisible(true);
        visitCb.setVisible(true);
        conditionLbl.setVisible(true);
        conditionSl.setVisible(true);
        detachedLbl.setVisible(false);
        detachedCb.setVisible(false);
        detadvLbl.setVisible(false);
        detadvCb.setVisible(false);
        semgardenLbl.setVisible(false);
        semgardenCb.setVisible(false);
        semLbl.setVisible(false);
        semCb.setVisible(false);
        terragardenLbl.setVisible(false);
        terragardenCb.setVisible(false);
        terraneiLbl.setVisible(false);
        terraneiCb.setVisible(false);
        apartLbl.setVisible(true);
        apartCb.setVisible(true);
        balLbl.setVisible(true);
        balCb.setVisible(true);

        
        }

        
    }//GEN-LAST:event_typeCbActionPerformed

    private void payTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_payTfActionPerformed

    private void visitCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitCbActionPerformed
        // TODO add your handling code here:
        if(visitCb.getSelectedItem().equals("No")){conditionLbl.setVisible(false);}
        if(visitCb.getSelectedItem().equals("Yes")){conditionLbl.setVisible(true);}
        if(visitCb.getSelectedItem().equals("No")){conditionSl.setVisible(false);}
        if(visitCb.getSelectedItem().equals("Yes")){conditionSl.setVisible(true);}
        
    }//GEN-LAST:event_visitCbActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        // TODO add your handling code here:
        if(e instanceof Detached){
           e=new Detached();
            String name = nameTf.getText();
            
            String[] ans1 = {"Choose one",
                    "Detached",
                    "Semi-detached",
                    "Terraced",
                    "Apartment"};
            
            int temphType = typeCb.getSelectedIndex();
            String hType = ans1[temphType];  
            
            String[] ans2 = {"North",
                    "South",
                    "Central",};
            
            int temphLoc = locationCb.getSelectedIndex();
            String Hloc = ans2[temphLoc];  
            
            String[] ans3={"1","2","3","4","5"};
           
            int tempcrimeL=crimeCb.getSelectedIndex();
            String crimeL = ans3[tempcrimeL];
            
            String[] ans4 = {"1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6"};
            
            int tempbAmount = bedroomsCb.getSelectedIndex();
            String bAmount = ans4[tempbAmount];
            
            String[] ans5={"Yes",
              "No"};
            
            int tempvisit=visitCb.getSelectedIndex();
            String visit= ans5[tempvisit];
            
            String[] ans6={"1",
                    "2",
                    "3",
                    "4",
                    "5"};
            
            int temprating=conditionSl.getSelectedIndex();
            String rating=ans6[temprating];
            
            String[] ans7={"never",
                    "I dont know",
                    "maybe",
                    "probably yes"};
            
            int tempextension=detachedCb.getSelectedIndex();
            String extension= ans7 [tempextension];
            
            String[] ans8={"privacy",
                    "2space",
                    "independance"};
            
            int tempadvantage=detadvCb.getSelectedIndex();
            String advantage=ans8[tempadvantage];
            
            
            
            
            double hPay = Double.parseDouble(payTf.getText());
            
            factors=factorsTf.getText();
            
            //boolean visit;
           // int rating;
           // String extension;
           // String advantage;
            
            //e= new Detached(extension,advantage,name,hType,hPay,Hloc,crimeL,bAmount,visit,rating);
            
             //TODO
            
             

//Add e to an arraylist of type Survey
array.add((Detached)e);
writeToFile();

             


// Save the arraylist
                    
                    
            
            
            
        }
if(e instanceof SemiDetached){
           e=new SemiDetached();
            String name = nameTf.getText();
            
            String[] ans1 = {"Choose one",
                    "Detached",
                    "Semi-detached",
                    "Terraced",
                    "Apartment"};
            
            int temphType = typeCb.getSelectedIndex();
            String hType = ans1[temphType];  
            
            String[] ans2 = {"North",
                    "South",
                    "Central",};
            
            int temphLoc = locationCb.getSelectedIndex();
            String Hloc = ans2[temphLoc];  
            
            String[] ans3={"1","2","3","4","5"};
           
            int tempcrimeL=crimeCb.getSelectedIndex();
            String crimeL = ans3[tempcrimeL];
            
            String[] ans4 = {"1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6"};
            
            int tempbAmount = bedroomsCb.getSelectedIndex();
            String bAmount = ans4[tempbAmount];
            
            String[] ans5={"Yes",
              "No"};
            
            int tempvisit=visitCb.getSelectedIndex();
            String visit= ans5[tempvisit];
            
            String[] ans6={"1",
                    "2",
                    "3",
                    "4",
                    "5"};
            
            int temprating=conditionSl.getSelectedIndex();
            String rating=ans6[temprating];
            
            String[] ans7={"no garden size is unimportant",
                    "yes I require a big garden"};
            
            int tempgarden=semgardenCb.getSelectedIndex();
            String garden= ans7 [tempgarden];
            
            String[] ans8={"yes it was great",
                    "no we did not get along"};
            
            int tempPattached=semCb.getSelectedIndex();
            String Pattached=ans8[tempPattached];
            
            
            
            
            double hPay = Double.parseDouble(payTf.getText());
            
            factors=factorsTf.getText();
            
array1.add((SemiDetached)e);
writeToFile();
            
        }

if(e instanceof Terraced){
           e=new Terraced();
            String name = nameTf.getText();
            
            String[] ans1 = {"Choose one",
                    "Detached",
                    "Semi-detached",
                    "Terraced",
                    "Apartment"};
            
            int temphType = typeCb.getSelectedIndex();
            String hType = ans1[temphType];  
            
            String[] ans2 = {"North",
                    "South",
                    "Central",};
            
            int temphLoc = locationCb.getSelectedIndex();
            String Hloc = ans2[temphLoc];  
            
            String[] ans3={"1","2","3","4","5"};
           
            int tempcrimeL=crimeCb.getSelectedIndex();
            String crimeL = ans3[tempcrimeL];
            
            String[] ans4 = {"1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6"};
            
            int tempbAmount = bedroomsCb.getSelectedIndex();
            String bAmount = ans4[tempbAmount];
            
            String[] ans5={"Yes",
              "No"};
            
            int tempvisit=visitCb.getSelectedIndex();
            String visit= ans5[tempvisit];
            
            String[] ans6={"1",
                    "2",
                    "3",
                    "4",
                    "5"};
            
            int temprating=conditionSl.getSelectedIndex();
            String rating=ans6[temprating];
            
            String[] ans7={"no garden",
                    "very small garden",
                    "normal size",
                    "big"};
            
            int temptergarden=terragardenCb.getSelectedIndex();
            String tergarden= ans7 [temptergarden];
            
            String[] ans8={"great",
                    "it was ok",
                    "one of them were ok",
                    "very bad"};
            
            int tempneighbours=terraneiCb.getSelectedIndex();
            String neighbours=ans8[tempneighbours];
            
            
            
            
            double hPay = Double.parseDouble(payTf.getText());
            
            factors=factorsTf.getText();
            
array2.add((Terraced)e);
writeToFile();
        }

if(e instanceof Apartment){
           e=new Apartment();
            String name = nameTf.getText();
            
            String[] ans1 = {"Choose one",
                    "Detached",
                    "Semi-detached",
                    "Terraced",
                    "Apartment"};
            
            int temphType = typeCb.getSelectedIndex();
            String hType = ans1[temphType];  
            
            String[] ans2 = {"North",
                    "South",
                    "Central",};
            
            int temphLoc = locationCb.getSelectedIndex();
            String Hloc = ans2[temphLoc];  
            
            String[] ans3={"1","2","3","4","5"};
           
            int tempcrimeL=crimeCb.getSelectedIndex();
            String crimeL = ans3[tempcrimeL];
            
            String[] ans4 = {"1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6"};
            
            int tempbAmount = bedroomsCb.getSelectedIndex();
            String bAmount = ans4[tempbAmount];
            
            String[] ans5={"Yes",
              "No"};
            
            int tempvisit=visitCb.getSelectedIndex();
            String visit= ans5[tempvisit];
            
            String[] ans6={"1",
                    "2",
                    "3",
                    "4",
                    "5"};
            
            int temprating=conditionSl.getSelectedIndex();
            String rating=ans6[temprating];
            
            String[] ans7={"no ",
                           "yes"};
            
            int tempcBalcony=apartCb.getSelectedIndex();
            String cBalcony= ans7 [tempcBalcony];
            
            String[] ans8={"no ",
                           "yes"};
            
            int tempnBalcony=balCb.getSelectedIndex();
            String nBalcony=ans8[tempnBalcony];
            
            
            
            
            double hPay = Double.parseDouble(payTf.getText());
            
            factors=factorsTf.getText();

array3.add((Detached)e);
writeToFile();            
        
}

public void writeToFile(){
    
        if(e instanceof Detached){
        
            try{
            File f=new File("detached.dat");
            FileOutputStream fStream=new FileOutputStream(f);
            ObjectOutputStream oStream=new ObjectOutputStream(fStream);
            oStream.writeObject(array);
            oStream.close();
            }
            catch(IOException r){
            System.out.println(r);
            }
        }
        
         if(e instanceof SemiDetached){
             
        
            try{
            File f=new File("SemiDetached.dat");
            FileOutputStream fStream=new FileOutputStream(f);
            ObjectOutputStream oStream=new ObjectOutputStream(fStream);
            oStream.writeObject(array1);
            oStream.close();
            }
            catch(IOException r){
            System.out.println(r);
            }
        }
    
         if(e instanceof Terraced){
             
        
            try{
            File f=new File("Terraced.dat");
            FileOutputStream fStream=new FileOutputStream(f);
            ObjectOutputStream oStream=new ObjectOutputStream(fStream);
            oStream.writeObject(array3);
            oStream.close();
            }
            catch(IOException l){
            System.out.println(l);
            }
        }
            if(e instanceof Apartment){
             
        
            try{
            File f=new File("Apartment.dat");
            FileOutputStream fStream=new FileOutputStream(f);
            ObjectOutputStream oStream=new ObjectOutputStream(fStream);
            oStream.writeObject(array3);
            oStream.close();
            }
            catch(IOException l){
            System.out.println(l);
            }
    }


        
        
        
    }//GEN-LAST:event_submitBtnActionPerformed

    private void nameTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTfActionPerformed

    private void factorsTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_factorsTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_factorsTfActionPerformed

    private void bedroomsCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedroomsCbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bedroomsCbActionPerformed

    private void detachedCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detachedCbActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_detachedCbActionPerformed

    private void locationCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationCbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_locationCbActionPerformed

    private void crimeCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crimeCbActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_crimeCbActionPerformed

    private void BackbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackbtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
            new HouseGUI().setVisible(true); 
    }//GEN-LAST:event_BackbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SurveyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SurveyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SurveyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SurveyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SurveyGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Backbtn;
    private javax.swing.JComboBox<String> apartCb;
    private javax.swing.JLabel apartLbl;
    private javax.swing.JComboBox<String> balCb;
    private javax.swing.JLabel balLbl;
    private javax.swing.JComboBox<String> bedroomsCb;
    private javax.swing.JLabel bedroomsLbl;
    private javax.swing.JLabel conditionLbl;
    private javax.swing.JComboBox<String> conditionSl;
    private javax.swing.JComboBox<String> crimeCb;
    private javax.swing.JLabel crimeLbl;
    private javax.swing.JComboBox<String> detachedCb;
    private javax.swing.JLabel detachedLbl;
    private javax.swing.JComboBox<String> detadvCb;
    private javax.swing.JLabel detadvLbl;
    private javax.swing.JLabel factorsLbl;
    private javax.swing.JTextField factorsTf;
    private javax.swing.JComboBox<String> locationCb;
    private javax.swing.JLabel locationLbl;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JTextField nameTf;
    private javax.swing.JLabel payLbl;
    private javax.swing.JTextField payTf;
    private javax.swing.JComboBox<String> semCb;
    private javax.swing.JLabel semLbl;
    private javax.swing.JComboBox<String> semgardenCb;
    private javax.swing.JLabel semgardenLbl;
    private javax.swing.JButton submitBtn;
    private javax.swing.JComboBox<String> terragardenCb;
    private javax.swing.JLabel terragardenLbl;
    private javax.swing.JComboBox<String> terraneiCb;
    private javax.swing.JLabel terraneiLbl;
    private javax.swing.JComboBox<String> typeCb;
    private javax.swing.JLabel typeLbl;
    private javax.swing.JComboBox<String> visitCb;
    private javax.swing.JLabel visitLbl;
    // End of variables declaration//GEN-END:variables
}
